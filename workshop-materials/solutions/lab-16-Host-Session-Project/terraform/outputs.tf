# outputs.tf for Lab 16: Host Session Project Implementation
# Generated by Copilot

output "host_project_id" {
  description = "The ID of the host session project"
  value       = var.create_host_project ? google_project.host_session_project[0].project_id : var.host_project_id
}

output "host_project_name" {
  description = "The name of the host session project"
  value       = var.create_host_project ? google_project.host_session_project[0].name : var.host_project_name
}

output "host_session_vpc_name" {
  description = "Name of the host session VPC network"
  value       = google_compute_network.host_session_vpc.name
}

output "host_session_vpc_id" {
  description = "ID of the host session VPC network"
  value       = google_compute_network.host_session_vpc.id
}

output "host_session_vpc_self_link" {
  description = "Self-link of the host session VPC network"
  value       = google_compute_network.host_session_vpc.self_link
}

output "host_session_subnet_name" {
  description = "Name of the host session subnet"
  value       = google_compute_subnetwork.host_session_subnet.name
}

output "host_session_subnet_id" {
  description = "ID of the host session subnet"
  value       = google_compute_subnetwork.host_session_subnet.id
}

output "host_session_subnet_cidr" {
  description = "CIDR range of the host session subnet"
  value       = google_compute_subnetwork.host_session_subnet.ip_cidr_range
}

output "host_session_subnet_self_link" {
  description = "Self-link of the host session subnet"
  value       = google_compute_subnetwork.host_session_subnet.self_link
}

output "nat_router_name" {
  description = "Name of the Cloud NAT router"
  value       = google_compute_router.host_session_router.name
}

output "nat_gateway_name" {
  description = "Name of the Cloud NAT gateway"
  value       = google_compute_router_nat.host_session_nat.name
}

output "firewall_rules" {
  description = "List of created firewall rules"
  value = {
    ssh_rule      = google_compute_firewall.host_session_allow_ssh.name
    rdp_rule      = google_compute_firewall.host_session_allow_rdp.name
    internal_rule = google_compute_firewall.host_session_allow_internal.name
  }
}

output "sample_vm_name" {
  description = "Name of the sample VM instance (if created)"
  value       = var.create_sample_vm ? google_compute_instance.host_session_vm[0].name : null
}

output "sample_vm_internal_ip" {
  description = "Internal IP address of the sample VM (if created)"
  value       = var.create_sample_vm ? google_compute_instance.host_session_vm[0].network_interface[0].network_ip : null
}

output "sample_vm_self_link" {
  description = "Self-link of the sample VM instance (if created)"
  value       = var.create_sample_vm ? google_compute_instance.host_session_vm[0].self_link : null
}

output "enabled_apis" {
  description = "List of enabled APIs in the host session project"
  value       = var.create_host_project ? [for api in google_project_service.host_session_apis : api.service] : var.required_apis
}

output "project_iam_bindings" {
  description = "IAM bindings applied to the host session project"
  value = {
    admin_members = var.host_session_admin_members
    user_members  = var.host_session_user_members
  }
}

output "network_configuration" {
  description = "Network configuration summary"
  value = {
    vpc_name           = google_compute_network.host_session_vpc.name
    subnet_name        = google_compute_subnetwork.host_session_subnet.name
    subnet_cidr        = google_compute_subnetwork.host_session_subnet.ip_cidr_range
    region             = var.region
    zone               = var.zone
    private_ip_access  = google_compute_subnetwork.host_session_subnet.private_ip_google_access
  }
}

output "security_configuration" {
  description = "Security configuration summary"
  value = {
    ssh_source_ranges = var.ssh_source_ranges
    rdp_source_ranges = var.rdp_source_ranges
    network_tags      = var.network_tags
    oslogin_enabled   = var.enable_oslogin
  }
}
